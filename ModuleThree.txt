"TravelBooking_PaymentModule/src/main/java/com/booking/BookingApplication.java"

package com.booking;
 
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
 
@SpringBootApplication
public class BookingApplication {
	public static void main(String[] args) {
    	SpringApplication.run(BookingApplication.class, args);
    	}
}

"TravelBooking_PaymentModule/src/main/java/com/booking/controller/BookingController.java"
package com.booking.controller;

import com.booking.entity.Booking;
import com.booking.service.BookingService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;

@RestController
@RequestMapping("/api/bookings")
public class BookingController {
    @Autowired
    private BookingService bookingService;

    @PostMapping
    public Booking create(@RequestBody Booking booking) {
        return bookingService.createBooking(booking);
    }

    @GetMapping
    public List<Booking> getAll() {
        return bookingService.getAllBookings();
    }

    @GetMapping("/{id}")
    public Booking getById(@PathVariable Long id) {
        return bookingService.getBookingById(id);
    }

    @DeleteMapping("/{id}")
    public void delete(@PathVariable Long id) {
        bookingService.deleteBooking(id);
    }
}

"TravelBooking_PaymentModule/src/main/java/com/booking/controller/PaymentController.java"
package com.booking.controller;

import com.booking.entity.Payment;
import com.booking.service.PaymentService;

import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.HttpStatus;
//import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.List;

@RestController
@RequestMapping("/api/payments")
public class PaymentController {
    @Autowired
    private PaymentService paymentService;

    @PostMapping
    public Payment process(@RequestBody Payment payment) {
        return paymentService.processPayment(payment);
    }

    @GetMapping
    public List<Payment> getAll() {
        return paymentService.getAllPayments();
    }

    @GetMapping("/{id}")
    public Payment getById(@PathVariable Long id) {
        return paymentService.getPaymentById(id);
    }

}

"TravelBooking_PaymentModule/src/main/java/com/booking/controller/TravelPackageController.java"
package com.booking.controller;

import com.booking.controller.TravelPackageController;
import com.booking.entity.TravelPackage;
import com.booking.service.TravelPackageService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;
import java.util.List;
 
@RestController
@RequestMapping("/api/packages")
public class TravelPackageController {
    @Autowired
    private TravelPackageService packageService;
    
    @PostMapping
    public TravelPackage createPackage(@RequestBody TravelPackage travelPackage) {
        return packageService.savePackage(travelPackage);
    }
    
    @PostMapping("/batch")
    public void createPackages(@RequestBody List<TravelPackage> travelPackages) {
    	packageService.savePackages(travelPackages);
    }

 
    @GetMapping("/search")
    public List<TravelPackage> searchPackages(@RequestParam String destination) {
        return packageService.searchByDestination(destination);
    }
    
    @GetMapping("/search-by-country")
    public List<TravelPackage> searchByCountry(@RequestParam String country) {
        return packageService.searchByCountry(country);
    }

    @GetMapping("/search-by-offer")
    public List<TravelPackage> searchByOffer(@RequestParam String offer) {
        return packageService.searchByOffer(offer);
    }
 
    @GetMapping("/search-by-date")
    public List<TravelPackage> searchByDates(@RequestParam String from, @RequestParam String to) {
        LocalDate startDate = LocalDate.parse(from);
        LocalDate endDate = LocalDate.parse(to);
        return packageService.searchByDateRange(startDate, endDate);
    }

}

"TravelBooking_PaymentModule/src/main/java/com/booking/entity/Booking.java"
package com.booking.entity;

import java.time.LocalDate;
import java.util.concurrent.atomic.AtomicInteger;
//import java.util.stream.IntStream;

import jakarta.persistence.*;

@Entity
public class Booking {

	private static final AtomicInteger bookingCounter = new AtomicInteger(1000);
    private static final AtomicInteger userCounter = new AtomicInteger(1000);
    
    @Id
    private Long bookingId;
    private String userId;
    private String packageId;
    private LocalDate startDate;
    private LocalDate endDate;
    private String status;
    private Long paymentId;

    @PrePersist
    public void generateIds() {
        if (this.bookingId == null) {
            this.bookingId =(long)bookingCounter.getAndIncrement();
        }
        if (this.userId == null) {
            this.userId = "User" + userCounter.getAndIncrement();
        }
    }
    
    // Getters and Setters
    public Long getBookingId() {
        return bookingId;
    }

    public void setBookingId(Long bookingId) {
        this.bookingId = bookingId;
    }

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public String getPackageId() {
        return packageId;
    }

    public void setPackageId(String packageId) {
        this.packageId = packageId;
    }

    public LocalDate getStartDate() {
        return startDate;
    }

    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    public LocalDate getEndDate() {
        return endDate;
    }

    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

	public Long getPaymentId() {
		return paymentId;
	}

	public void setPaymentId(Long paymentId) {
		this.paymentId = paymentId;
	}


}


"TravelBooking_PaymentModule/src/main/java/com/booking/entity/Payment.java"
package com.booking.entity;

import jakarta.persistence.*;

@Entity
public class Payment {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long paymentId;
    private Long userId;
    private String bookingId;
    private double amount;
    private String status;
    
    @Column(nullable = false)
    private String paymentMethod; // Should be "Credit Card" or "Debit Card"
 
    private String currency;
 
    @Transient
    private String cardNumber;  // Not stored in DB
 
    @Transient
    private String cvv;
 
    @Transient
    private String atmPin;
    
    //private String paymentMethod;
    //private String Currency;
    // Getters and Setters
	public Long getUserId() {
		return userId;
	}
	public void setUserId(Long userId) {
		this.userId = userId;
	}
	public String getBookingId() {
		return bookingId;
	}
	public void setBookingId(String bookingId) {
		this.bookingId = bookingId;
	}
	public double getAmount() {
		return amount;
	}
	public void setAmount(double amount) {
		this.amount = amount;
	}
	public String getStatus() {
		return status;
	}
	public void setStatus(String status) {
		this.status = status;
	}
	public String getPaymentMethod() {
		return paymentMethod;
	}
	public void setPaymentMethod(String paymentMethod) {
		this.paymentMethod = paymentMethod;
	}
	public String getCurrency() {
		return currency;
	}
	public void setCurrency(String currency) {
		this.currency = currency;
	}
	public String getCardNumber() {
		return cardNumber;
	}
	public void setCardNumber(String cardNumber) {
		this.cardNumber = cardNumber;
	}
	public String getCvv() {
		return cvv;
	}
	public void setCvv(String cvv) {
		this.cvv = cvv;
	}
	public String getAtmPin() {
		return atmPin;
	}
	public void setAtmPin(String atmPin) {
		this.atmPin = atmPin;
	}	
 	
//	String subject = "Booking Payment Confirmation";
//	String body = "Your payment of " + payment.getAmount() + " " + payment.getCurrency() +
//	              " for Booking ID " + payment.getBookingId() + " is successful.";
//	 
//	emailService.sendEmail(customerEmail, subject, body);
//	emailService.sendEmail(agentEmail, subject, body);

}

"TravelBooking_PaymentModule/src/main/java/com/booking/entity/TravelPackage.java"
package com.booking.entity;

import java.time.LocalDate;

import jakarta.persistence.*;
 
@Entity
public class TravelPackage {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String destination;
    private String description;
    private double price;
    private String currency;
    private String offer;
    private LocalDate startDate;
    private LocalDate endDate;
    private String country;
 
    // Getters and Setters
    public Long getId() {
        return id;
    }
    public void setId(Long id) {
    	this.id = id;
    }
    public String getDestination() {
        return destination;
    }
    public void setDestination(String destination) {
        this.destination = destination;
    }
    public String getDescription() {
        return description;
    }
    public void setDescription(String description) {
        this.description = description;
    }
    public double getPrice() {
        return price;
    }
    public void setPrice(double price) {
        this.price = price;
    }
    public String getCurrency() {
        return currency;
    }
    public void setCurrency(String currency) {
        this.currency = currency;
    }
	public String getOffer() {
		return offer;
	}
	public void setOffer(String offer) {
		this.offer = offer;
	}
	public LocalDate getStartDate() {
		return startDate;
	}
	public void setStartDate(LocalDate startDate) {
		this.startDate = startDate;
	}
	public LocalDate getEndDate() {
		return endDate;
	}
	public void setEndDate(LocalDate endDate) {
		this.endDate = endDate;
	}
	public String getCountry() {
		return country;
	}
	public void setCountry(String country) {
		this.country = country;
	}
}

"TravelBooking_PaymentModule/src/main/java/com/booking/repository/BookingRepository.java"
package com.booking.repository;

import com.booking.entity.Booking;
import org.springframework.data.jpa.repository.JpaRepository;

public interface BookingRepository extends JpaRepository<Booking, Long> {}
package com.booking.repository;
 
import com.booking.entity.Payment;
import org.springframework.data.jpa.repository.JpaRepository;
 
public interface PaymentRepository extends JpaRepository<Payment, Long> {
}

"TravelBooking_PaymentModule/src/main/java/com/booking/repository/BookingRepository.java"


"TravelBooking_PaymentModule/src/main/java/com/booking/repository/BookingRepository.java"
package com.booking.repository;

import com.booking.entity.TravelPackage;
import org.springframework.data.jpa.repository.JpaRepository;

import java.time.LocalDate;
import java.util.List;
 
public interface TravelPackageRepository extends JpaRepository<TravelPackage, Long> {
    List<TravelPackage> findByDestination(String destination);
    List<TravelPackage> findByOfferContainingIgnoreCase(String offer);
    List<TravelPackage> findByStartDateLessThanEqualAndEndDateGreaterThanEqual(LocalDate from, LocalDate to);
    List<TravelPackage> findByCountryContainingIgnoreCase(String country);
}

"TravelBooking_PaymentModule/src/main/java/com/booking/service/BookingService.java"
package com.booking.service;

import com.booking.entity.Booking;
import com.booking.repository.BookingRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;


@Service
public class BookingService {
    @Autowired
    private BookingRepository bookingRepo;

    public Booking createBooking(Booking booking) {
        booking.setStatus("CONFIRMED");
        return bookingRepo.save(booking);
    }

    public List<Booking> getAllBookings() {
        return bookingRepo.findAll();
    }

    public Booking getBookingById(Long id) {
        return bookingRepo.findById(id).orElse(null);
    }

    public void deleteBooking(Long id) {
        bookingRepo.deleteById(id);
    }
}

"TravelBooking_PaymentModule/src/main/java/com/booking/service/NotificationService.java"

package com.booking.service;

//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.mail.SimpleMailMessage;
//import org.springframework.mail.javamail.JavaMailSender;

import org.springframework.stereotype.Service;
 
@Service
public class NotificationService {
 
    public void notifyCustomer(String email, String message) {
        // Simulate sending an email
        System.out.println("Email sent to customer (" + email + "): " + message);
    }
 
    public void notifyTravelAgent(String agentEmail, String message) {
        // Simulate sending an email
        System.out.println("Email sent to travel agent (" + agentEmail + "): " + message);
    }
}

"TravelBooking_PaymentModule/src/main/java/com/booking/service/PaymentService.java"
package com.booking.service;

import com.booking.entity.Payment;
import com.booking.repository.PaymentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
 
import java.util.List;
 
@Service
public class PaymentService {
    @Autowired
    private PaymentRepository paymentRepo;
 
    @Autowired
    private NotificationService notificationService;
 
    public Payment processPayment(Payment payment) {
        if (!payment.getPaymentMethod().equalsIgnoreCase("Credit Card") &&
            !payment.getPaymentMethod().equalsIgnoreCase("Debit Card")) {
            throw new IllegalArgumentException("Only Credit Card or Debit Card are accepted.");
        }
 
        if (payment.getCardNumber() == null || !payment.getCardNumber().matches("\\d{16}")) {
            throw new IllegalArgumentException("Invalid card number. Must be 16 digits.");
        }
 
        if (payment.getCvv() == null || !payment.getCvv().matches("\\d{3}")) {
            throw new IllegalArgumentException("Invalid CVV. Must be 3 digits.");
        }
 
        if (payment.getAtmPin() == null || !payment.getAtmPin().matches("\\d{4}")) {
            throw new IllegalArgumentException("Invalid ATM PIN. Must be 4 digits.");
        }
 
        payment.setStatus("PAID");
        Payment saved = paymentRepo.save(payment);
 
        // Notify customer and agent with booking info (mocked)
        String customerEmail = "customer@example.com"; // Fetch dynamically from DB if needed
        String agentEmail = "agent@example.com";       // Fetch dynamically if needed
        String message = "Payment of " + payment.getAmount() + " " + payment.getCurrency() +
                         " for booking ID " + payment.getBookingId() + " is successful.";
 
        notificationService.notifyCustomer(customerEmail, message);
        notificationService.notifyTravelAgent(agentEmail, message);
 
        return saved;
    }
 
    public List<Payment> getAllPayments() {
        return paymentRepo.findAll();
    }
 
    public Payment getPaymentById(Long id) {
        return paymentRepo.findById(id).orElse(null);
    }
}


"TravelBooking_PaymentModule/src/main/java/com/booking/service/TravelPackageService.java"
package com.booking.service;
 
import com.booking.service.TravelPackageService;
import com.booking.entity.TravelPackage;
import com.booking.repository.TravelPackageRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.util.List;
 
@Service
public class TravelPackageService {
    @Autowired
    private TravelPackageRepository packageRepo;
 
    public List<TravelPackage> searchByDestination(String destination) {
        return packageRepo.findByDestination(destination);
    }
    public List<TravelPackage> searchByCountry(String country) {
        return packageRepo.findByCountryContainingIgnoreCase(country);
    }
    public List<TravelPackage> searchByOffer(String offer) {
        return packageRepo.findByOfferContainingIgnoreCase(offer);
    }
 
    public List<TravelPackage> searchByDateRange(LocalDate from, LocalDate to) {
        return packageRepo.findByStartDateLessThanEqualAndEndDateGreaterThanEqual(from, to);
    }
 
    public TravelPackage savePackage(TravelPackage travelPackage) {
        return packageRepo.save(travelPackage);
    }
    
    public void savePackages(List<TravelPackage> travelPackages) {
    	for(TravelPackage tp:travelPackages)
		{
    		packageRepo.save(tp);
		}
    }
}

"TravelBooking_PaymentModule/src/main/resources/application.properties"
spring.application.name=TravelBooking_PaymentModule
spring.datasource.url=jdbc:mysql://localhost:3306/travel_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
logging.level.org.hibernate.SQL=debug
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
server.port=8080

"TravelBooking_PaymentModule/src/pom.xml"
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.booking</groupId>
	<artifactId>TravelBooking_PaymentModule</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>TravelBooking_PaymentModule</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
			<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>8.0.33</version>
</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-mail</artifactId>
	</dependency>

	
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
